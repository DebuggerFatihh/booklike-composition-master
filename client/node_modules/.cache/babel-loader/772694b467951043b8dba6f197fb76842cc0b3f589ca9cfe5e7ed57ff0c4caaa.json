{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex flex-row\"\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_app_bookmark_list = _resolveComponent(\"app-bookmark-list\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_AppHeader), _createElementVNode(\"div\", _hoisted_1, [_createVNode($setup[\"Sidebar\"], {\n    onCategoryChanged: _ctx.updateBookmarkList\n  }, null, 8 /* PROPS */, [\"onCategoryChanged\"]), $setup.bookmarkList.length > 0 ? (_openBlock(), _createBlock(_component_app_bookmark_list, {\n    key: 0,\n    items: $setup.bookmarkList\n  }, null, 8 /* PROPS */, [\"items\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Bookmark bulunmamaktadır..\"))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_1","$setup","onCategoryChanged","_ctx","updateBookmarkList","bookmarkList","length","_createBlock","_component_app_bookmark_list","items","_createElementBlock","_hoisted_2"],"sources":["C:\\Users\\Fatih\\Desktop\\1 9\\booklike-composition-master\\client\\src\\views\\Home.vue"],"sourcesContent":["<template>\n  <AppHeader />\n  <div class=\"flex flex-row\">\n    <Sidebar @category-changed=\"updateBookmarkList\" />\n    <app-bookmark-list v-if=\"bookmarkList.length > 0\" :items=\"bookmarkList\" />\n    <div v-else>Bookmark bulunmamaktadır..</div>\n  </div>\n</template>\n<script setup>\nimport Sidebar from \"@/components/Home/SideBar\";\nimport { ref, onMounted, inject } from \"vue\";\n// import { useStore } from \"vuex\";\n// const appAxios = inject(\"appAxios\");\nconst socket = inject(\"socket\");\nconst bookmarkList = ref([]);\n// const store = useStore();\n\nonMounted(() => {\n  socket.on(\"NEW_BOOKMARK_ADDED\", bookmark => {\n    bookmarkList.value.push(bookmark);\n  });\n});\n\nconst fetchData = () => {\n  appAxios.get(\"/bookmarks?_expand=category&_expand=user\").then(bookmark_list_response => { //https://localhost:7255/api/Bookmark\n\n    bookmarkList.value = bookmark_list_response?.data || []; \n  });\n  \n//   //! Bookmark olarak eklediklerimizi çekmek için user_bookmarks üzerinden çekelim..\n//   appAxios.get(\"/user_bookmarks/?_expand=bookmark&_expand=user\").then(user_bookmark_response => { \n//     store.commit(\"setBookmarks\", user_bookmark_response?.data); \n//   });\n\n//   //! Like olarak eklediklerimizi çekmek için user_likes üzerinden çekelim..\n//   appAxios.get(\"/user_likes/?_expand=bookmark&_expand=user\").then(user_likes_response => {\n//     store.commit(\"setLikes\", user_likes_response?.data);\n//   });\n// };\n// const updateBookmarkList = categoryId => {\n//   const url = categoryId ? `/bookmarks?_expand=category&_expand=user&categoryId=${categoryId}` : `/bookmarks?_expand=category&_expand=user`;\n//   appAxios.get(url).then(bookmark_list_response => {\n//     bookmarkList.value = bookmark_list_response?.data || [];\n//   });\n// };\n\nfetchData();\n }\n</script>"],"mappings":";;EAEOA,KAAK,EAAC;AAAe;;;;;;;6DAD1BC,YAAA,CAAaC,oBAAA,GACbC,mBAAA,CAIM,OAJNC,UAIM,GAHJH,YAAA,CAAkDI,MAAA;IAAxCC,iBAAgB,EAAEC,IAAA,CAAAC;EAAkB,gDACrBH,MAAA,CAAAI,YAAY,CAACC,MAAM,Q,cAA5CC,YAAA,CAA0EC,4BAAA;;IAAvBC,KAAK,EAAER,MAAA,CAAAI;uDAC1DK,mBAAA,CAA4C,OAAAC,UAAA,EAAhC,4BAA0B,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}